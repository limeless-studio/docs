"use strict";(self.webpackChunkcore_docs=self.webpackChunkcore_docs||[]).push([[9989],{3876:(t,e,s)=>{s.r(e),s.d(e,{assets:()=>a,contentTitle:()=>n,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var o=s(5893),r=s(1151);const i={sidebar_position:1},n="Special Attributes",c={id:"root/CoreDocs/Attributes/SpecialAttributes",title:"Special Attributes",description:"AllowNesting",source:"@site/docs/root/CoreDocs/Attributes/SpecialAttributes.md",sourceDirName:"root/CoreDocs/Attributes",slug:"/root/CoreDocs/Attributes/SpecialAttributes",permalink:"/docs/docs/root/CoreDocs/Attributes/SpecialAttributes",draft:!1,unlisted:!1,editUrl:"https://github.com/limeless-studio/docs/docs/root/CoreDocs/Attributes/SpecialAttributes.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Attributes Overview",permalink:"/docs/docs/root/CoreDocs/Attributes/"},next:{title:"Drawer Attributes",permalink:"/docs/docs/root/CoreDocs/Attributes/DrawerAttributes"}},a={},l=[{value:"AllowNesting",id:"allownesting",level:2}];function u(t){const e={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"special-attributes",children:"Special Attributes"}),"\n",(0,o.jsx)(e.h2,{id:"allownesting",children:"AllowNesting"}),"\n",(0,o.jsxs)(e.p,{children:["By default ",(0,o.jsx)(e.a,{href:"/docs/docs/root/CoreDocs/Attributes/DrawerAttributes",children:"Drawer Attributes"})," can be nested inside structs and classes.\n",(0,o.jsx)(e.a,{href:"/docs/docs/root/CoreDocs/Attributes/MetaAttributes",children:"Meta Attributes"})," and ",(0,o.jsx)(e.a,{href:"/docs/docs/root/CoreDocs/Attributes/ValidatorAttributes",children:"Validator Attributes"})," however are not drawers and don\u2019t support nesting out of the box.\nIf you want to use EnableIf / DisableIf attributes inside structs for instance, you have to use the ",(0,o.jsx)(e.code,{children:"AllowNesting"})," attribute like so:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-csharp",children:'public class SampleComponent : MonoBehaviour\n{\n    public MyStruct myStruct;\n}\n\n[System.Serializable]\npublic struct MyStruct\n{\n    public bool enableFlag;\n\n    [EnableIf("enableFlag")]\n    [AllowNesting] // Because it\'s nested we need to explicitly allow nesting\n    public int integer;\n}\n'})})]})}function d(t={}){const{wrapper:e}={...(0,r.a)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(u,{...t})}):u(t)}},1151:(t,e,s)=>{s.d(e,{Z:()=>c,a:()=>n});var o=s(7294);const r={},i=o.createContext(r);function n(t){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:n(t.components),o.createElement(i.Provider,{value:e},t.children)}}}]);